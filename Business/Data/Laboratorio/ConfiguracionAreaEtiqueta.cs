/*
insert license info here
*/
using System;
using System.Collections;

namespace Business.Data.Laboratorio
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class ConfiguracionAreaEtiqueta : Business.BaseDataAccess
	{

		#region Private Members
		private bool m_isChanged;

		private int m_idconfiguracionAreaEtiqueta; 
		private int m_idarea; private Efector m_idefector;
        private int m_idusuarioregistro;
        private DateTime m_fecharegistro;
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ConfiguracionAreaEtiqueta()
		{
            m_idconfiguracionAreaEtiqueta = 0;
            m_idarea = 0;
            m_idefector = new Efector();
            m_idusuarioregistro = 0;
            m_fecharegistro = DateTime.MinValue;

        }
		#endregion // End of Default ( Empty ) Class Constuctor

		#region Required Fields Only Constructor
		/// <summary>
		/// required (not null) fields only constructor
		/// </summary>
		public ConfiguracionAreaEtiqueta(
            int idarea, 
            Efector idefector,
            int  idusuarioregistro,
          DateTime  fecharegistro 
            )
			: this()
		{
            m_idarea = idarea;
            m_idefector = idefector;
            m_idusuarioregistro = idusuarioregistro;
            m_fecharegistro = fecharegistro;
		}
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int IdConfiguracionAreaEtiqueta
        {
			get { return m_idconfiguracionAreaEtiqueta; }
			set
			{
				m_isChanged |= (m_idconfiguracionAreaEtiqueta != value );
                m_idconfiguracionAreaEtiqueta = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public int IdArea
		{
			get { return m_idarea; }
			set
			{
				m_isChanged |= (m_idarea != value );
                m_idarea = value;
			}

		}

        public Efector IdEfector
        {
            get { return m_idefector; }
            set
            {
                m_isChanged |= (m_idefector != value);
                m_idefector = value;
            }

        }

        /// <summary>
        /// 
        /// </summary>
        public int IdUsuarioRegistro
        {
            get { return m_idusuarioregistro; }
            set
            {
                m_isChanged |= (m_idusuarioregistro != value);
                m_idusuarioregistro = value;
            }

        }

       

        /// <summary>
        /// 
        /// </summary>
        public DateTime FechaRegistro
        {
            get { return m_fecharegistro; }
            set
            {
                m_isChanged |= (m_fecharegistro != value);
                m_fecharegistro = value;
            }

        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsChanged
		{
			get { return m_isChanged; }
		}
				
		#endregion 
	}
}
