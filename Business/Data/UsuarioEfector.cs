/*
insert license info here
*/
using Business.Data.Laboratorio;
using System;
using System.Collections;

namespace Business.Data
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class UsuarioEfector: Business.BaseDataAccess
	{

		#region Private Members
		private bool m_isChanged;
        private int m_idusuarioefector;
        private Usuario m_idusuario; 
		private Efector m_idefector; 
		
		private bool m_activo;
       

        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public UsuarioEfector()
		{
            m_idusuarioefector = 0;
            m_idusuario = new Usuario(); 
			m_idefector = new Efector(); 
			
			m_activo = false;
          


        }

        
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Required Fields Only Constructor
        /// <summary>
        /// required (not null) fields only constructor
        /// </summary>
        public UsuarioEfector(
			bool activo)
			: this()
        {
            m_idusuario = new Usuario();
            m_idefector = new Efector();
			 
			m_activo = activo;
           

        }
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int IdUsuarioEfector
		{
			get { return m_idusuarioefector; }
			set
			{
				m_isChanged |= (m_idusuarioefector != value );
                m_idusuarioefector = value;
			}

		}


        public Usuario  IdUsuario
        {
            get { return m_idusuario; }
            set
            {
                m_isChanged |= (m_idusuario != value);
                m_idusuario = value;
            }

        }
		/// <summary>
		/// 
		/// </summary>
		public Efector IdEfector
		{
			get { return m_idefector; }
			set
			{
				m_isChanged |= ( m_idefector != value ); 
				m_idefector = value;
			}

		}
			
	 
		public bool Activo
		{
			get { return m_activo; }
			set
			{
				m_isChanged |= ( m_activo != value ); 
				m_activo = value;
			}

		}

 
		public bool IsChanged
		{
			get { return m_isChanged; }
		}

        #endregion


        #region Metodos


        #endregion

        //public bool esHemoterapia()
        //{
        //     var index=this.IdPerfil.Nombre.ToUpper().IndexOf("HEMOTERAPIA");
        //     if (index > -1) return true;
        //     else return false;

        //}
        
        
    }
}
