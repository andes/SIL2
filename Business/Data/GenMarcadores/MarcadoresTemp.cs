/*
insert license info here
*/
using System;
using System.Collections;

namespace Business.Data.GenMarcadores
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class MarcadoresTemp : Business.BaseDataAccess
	{

		#region Private Members
		private bool m_isChanged;
        private int m_idmarcadores;

        private int m_idprotocolo;
        private int m_idpaciente;


        private string m_marcador;
        private string m_allello1;
        private string m_allello2;
        private string m_ip;
        
    
        
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public MarcadoresTemp()
		{
            m_idmarcadores = 0;
            m_idprotocolo = 0;
            m_idpaciente = 0;


            m_marcador = String.Empty;
            m_allello1 = String.Empty;
            m_allello2 = String.Empty;
           




        }
		#endregion // End of Default ( Empty ) Class Constuctor

		#region Required Fields Only Constructor
		/// <summary>
		/// required (not null) fields only constructor
		/// </summary>
		public MarcadoresTemp(
			int idprotocolo,
                 int idpaciente,
            string marcador,
            string allello1,
            string allello2 )
			: this()
		{
			m_idprotocolo = idprotocolo;
            m_idpaciente = idpaciente;


            m_marcador = marcador;
            m_allello1 = allello1;
            m_allello2 = allello2;
         
		}
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int IdMarcadores
		{
			get { return m_idmarcadores; }
			set
			{
				m_isChanged |= (m_idmarcadores != value );
                m_idmarcadores = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public int IdProtocolo
		{
			get { return m_idprotocolo; }
			set
			{
				m_isChanged |= ( m_idprotocolo != value ); 
				m_idprotocolo = value;
			}

		}

        /// <summary>
        /// 
        /// </summary>
        public int IdPaciente
        {
            get { return m_idpaciente; }
            set
            {
                m_isChanged |= (m_idpaciente != value);
                m_idpaciente = value;
            }

        }



        public string Marcador
        {
            get { return m_marcador; }
            set
            {
                m_isChanged |= (m_marcador != value);
                m_marcador = value;
            }
        }

        public string Allello1
        {
            get { return m_allello1; }
            set
            {
                m_isChanged |= (m_allello1 != value);
                m_allello1 = value;
            }
        }
        public string Allello2
        {
            get { return m_allello2; }
            set
            {
                m_isChanged |= (m_allello2 != value);
                m_allello2 = value;
            }
        }
     



        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsChanged
		{
			get { return m_isChanged; }
		}

      

        #endregion
    }
}
