/*
insert license info here
*/
using Business.Data.Laboratorio;
using NHibernate;
using NHibernate.Expression;
using System;
using System.Collections;

namespace Business.Data.Facturacion
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class CasoPresupuesto : Business.BaseDataAccess
	{

		#region Private Members
		private bool m_isChanged;

		private int m_idcasopresupuesto; 
		private Presupuesto m_idpresupuesto; 
		private CasoFiliacion m_idcasofiliacion;
       
           
        
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public CasoPresupuesto()
		{
            m_idcasopresupuesto = 0;
            m_idpresupuesto = new Presupuesto();
            m_idcasofiliacion = new CasoFiliacion();
           
        }
		#endregion // End of Default ( Empty ) Class Constuctor

		#region Required Fields Only Constructor
		/// <summary>
		/// required (not null) fields only constructor
		/// </summary>
		public CasoPresupuesto(
             Presupuesto idpresupuesto,
            CasoFiliacion idcasofiliacion 
		 )
			: this()
		{
            m_idpresupuesto = idpresupuesto;
			m_idcasofiliacion = idcasofiliacion;

             
		}
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int IdCasoPresupuesto
        {
			get { return m_idcasopresupuesto; }
			set
			{
				m_isChanged |= (m_idcasopresupuesto != value );
                m_idcasopresupuesto = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public Presupuesto IdPresupuesto
        {
			get { return m_idpresupuesto; }
			set
			{
				m_isChanged |= (m_idpresupuesto != value );
                m_idpresupuesto = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public CasoFiliacion IdCasoFiliacion
        {
			get { return m_idcasofiliacion; }
			set
			{
				m_isChanged |= (m_idcasofiliacion != value );
                m_idcasofiliacion = value;
			}

		}


       
        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsChanged
		{
			get { return m_isChanged; }
		}

       

        #endregion
    }
}
